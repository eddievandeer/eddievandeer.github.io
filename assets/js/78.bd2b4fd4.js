(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{470:function(s,t,a){"use strict";a.r(t);var e=a(0),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey},scopedSlots:s._u([{key:"abstract",fn:function(){return[a("p",[s._v("因为在西山居的实习离职得比较晚，算是错过了秋招的高峰期，后面投了几次简历，只有中通和字节面试了，字节发挥不好挂了（其实是菜），中通一路很顺利的来到了 HR 面，没想到却倒在了最后一步。。")]),s._v(" "),a("p",[s._v("没办法的我想着只能好好准备春招了，但在一个偶然的机会，我看到了网易的秋招补录，于是投了一次简历，还有了面试的机会")])]},proxy:!0}])},[a("h2",{attrs:{id:"秋招补录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#秋招补录"}},[s._v("#")]),s._v(" 秋招补录")]),s._v(" "),a("h3",{attrs:{id:"百度-一面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#百度-一面"}},[s._v("#")]),s._v(" 百度 一面")]),s._v(" "),a("p",[s._v("在开写这一篇前就已经面完好几天了，题目基本都忘了，因为是突然打电话说要面，所以很多都来不及准备，直接挂了。不过这次面试也让我知道了秋招补录这件事，为此我也是稍微留意了一下其他公司的补录情况。在之后面试官给我发了面试没通过的通知邮件，但邮件上面还说，觉得我的基础还行，但是他们的秋招补录名额很少，要求会比较高，而且我有些题目确实没答好，所以挂了，让我加他微信春招找他内推，感觉应该是还有机会")]),s._v(" "),a("p",[s._v("这里因为时间太久了都忘了，就记几个当时没答好而印象深刻的吧")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("说一下 vue-router 两个模式的区别")]),s._v(" "),a("p",[s._v("当时只知道 "),a("code",[s._v("hash")]),s._v(" 模式会多一个 "),a("code",[s._v("#")]),s._v(" ， "),a("code",[s._v("history")]),s._v(" 模式不会，但其实这两个模式的实现可以说是前端路由的关键原理，这里简要概括一下：")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("hash")]),s._v(" 模式是通过监听 "),a("code",[s._v("hashchange")]),s._v(" 事件来做到监听 url 的改变，同时因为改变的是 url 的 "),a("code",[s._v("hash")]),s._v(" 值，不会导致页面的刷新")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("history")]),s._v(" 模式则是通过 "),a("code",[s._v("window")]),s._v(" 上的 "),a("code",[s._v("history")]),s._v(" 对象来实现的，通过 "),a("code",[s._v("history.pushState")]),s._v(" 和 "),a("code",[s._v("history.replacestate")]),s._v(" 方法来替换 url 且不刷新页面，同时可以通过 "),a("code",[s._v("history.state")]),s._v(" 进行路由传参。但这个模式最大的缺点在于刷新页面会导致 404 错误，这是因为该 url 并不是真实存在的，可以将路径重定向到入口文件来解决")])])])]),s._v(" "),a("li",[a("p",[s._v("讲一下 Vue.$nextTick() 的作用和原理")]),s._v(" "),a("p",[s._v("这里就讲了用处：在页面 DOM 发生改变时，执行回调函数")]),s._v(" "),a("p",[s._v("原理我就一窍不通了，后来百度了解了一下，又看了一下它的源码，下面是我的一个个人理解：")]),s._v(" "),a("p",[s._v("为什么要有 "),a("code",[s._v("Vue.$nextTick()")]),s._v(" ？因为 Vue 的 DOM 更新操作是异步执行的，会在 "),a("strong",[s._v("同一事件循环中")]),s._v(" 的所有数据完成变化之后，再统一进行视图的更新，所以在修改完数据后不能马上体现在 DOM 上，也就是说无法获取改变后的 DOM")]),s._v(" "),a("p",[a("code",[s._v("Vue.$nextTick()")]),s._v(" 的实现原理？通过创建异步任务，实现在同一事件循环中的数据变化完成后执行回调，优先创建微任务，如 "),a("code",[s._v("Promise.then")]),s._v(" 、 "),a("code",[s._v("MutationObserver")]),s._v(" ，若浏览器不支持再创建宏任务，如 "),a("code",[s._v("setImmediate")]),s._v(" 、 "),a("code",[s._v("setTimeout")]),s._v(" ，同时会维护一个回调的数组，等到事件循环到执行微任务的阶段时，执行并清空这个回调数组")])]),s._v(" "),a("li",[a("p",[s._v("一道算法题")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("在一个非常大的乱序数组中，所有数字都是不重复的，问如何以最快的时间找到第 n 大的数\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这道题在我的每日一题系列中有详解，可以点击 "),a("a",{attrs:{href:"../daily-question/day-16"}},[s._v("这里")]),s._v(" 查看，具体是使用了快排的原理，做到不需要全部排序即可获取目标数值")])])]),s._v(" "),a("p",[s._v("剩下的问题就想不起来了，总结一下就是没有准备，很多基础讲不清楚，给人一种一知半解的感觉，事后需要加强基础复习，至少背一下八股")]),s._v(" "),a("h3",{attrs:{id:"网易有道-一面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网易有道-一面"}},[s._v("#")]),s._v(" 网易有道 一面")]),s._v(" "),a("p",[s._v("今天是 2021 的倒数第二天，月初投的网易秋招补录初筛通过了，约的今天面试，这里记一下")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("自我介绍")])]),s._v(" "),a("li",[a("p",[s._v("Vue 跟 React 哪个用的更多？")]),s._v(" "),a("p",[s._v("那自然是初恋 Vue 了~")])]),s._v(" "),a("li",[a("p",[s._v("对自己前端三剑客掌握情况的评价")]),s._v(" "),a("p",[s._v("CSS 和 JS 五五开吧，HTML 论外")]),s._v(" "),a("p",[s._v("然后面试官就掏出几张图片来，照着图片一张一张的问我问题，我甚至怀疑是所有人都问同一套题目，莫名的觉得这面试官好懒~")])]),s._v(" "),a("li",[a("p",[s._v("实现垂直水平居中")]),s._v(" "),a("p",[s._v("这里我只回答了用 "),a("code",[s._v("flex")]),s._v(" 布局，配合 "),a("code",[s._v("justify-content: center")]),s._v(" 和 "),a("code",[s._v("align-items: center")]),s._v(" 实现居中，就被面试官打断了，后续本来还打算说说 "),a("code",[s._v("position + tranform")]),s._v(" 、 "),a("code",[s._v("flex + margin: auto")]),s._v(" ，面试官就让我详细讲解一下 "),a("code",[s._v("flex")]),s._v(" 布局")])]),s._v(" "),a("li",[a("p",[s._v("flex布局")]),s._v(" "),a("p",[s._v("问的很细，大概。首先上来先是给我一张图，照着这张图就开始问（面试官也是手画的）")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://upyun.cavalheiro.cn/images/%E6%89%AB%E6%8F%8F%E5%85%A8%E8%83%BD%E7%8E%8B%202022-01-01%2020.12.jpg",alt:"扫描全能王 2022-01-01 20.12"}})]),s._v(" "),a("p",[s._v("① 用 "),a("code",[s._v("flex")]),s._v(" 实现这个布局，首先 A 是固定高度，B 是固定宽度，C 宽度自适应，三者加起来宽高正好占满整个屏幕")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("首先为 ABC 套一个父元素，记为 "),a("code",[s._v("container")]),s._v(" ，设置为 "),a("code",[s._v("flex")]),s._v(" 布局，同时设置 "),a("code",[s._v("flex-direction: column")])])]),s._v(" "),a("li",[a("p",[s._v("为 BC 套一个父元素，记为 "),a("code",[s._v("parent")]),s._v(" ，也设置为 "),a("code",[s._v("flex")]),s._v(" 布局")])]),s._v(" "),a("li",[a("p",[s._v("为 A 设置高度，同时 "),a("code",[s._v("parent")]),s._v(" 添加 "),a("code",[s._v("flex: 1")]),s._v(" ，使其整体占据 "),a("code",[s._v("container")]),s._v(" 的剩余空间")])]),s._v(" "),a("li",[a("p",[s._v("为 B 设置宽度，同时 C 添加 "),a("code",[s._v("flex: 1")]),s._v(" 使其占据 "),a("code",[s._v("parent")]),s._v(" 的剩余空间")]),s._v(" "),a("p",[s._v("最开始我回答时没有用到 "),a("code",[s._v("container")]),s._v(" ，而是设置 "),a("code",[s._v("parent")]),s._v(" 的高度为 "),a("code",[s._v("calc(100vh - A的高度)")]),s._v(" ，面试官说应该尽量避免使用减法，问我如何优化？我犹豫了一下，回答了用负值，虽然事后尝试过确实可行，但不知道是不是面试官想要的答案")]),s._v(" "),a("p",[s._v("这里还问了 "),a("code",[s._v("flex-direction")]),s._v(" ，功能是设置主轴，也就是 "),a("code",[s._v("justify-content")]),s._v(" 对应的轴")])])]),s._v(" "),a("p",[s._v("② 这个布局就简单了， "),a("code",[s._v("align-items: center")]),s._v(" 垂直居中，然后 "),a("code",[s._v("justify-content: space-between")]),s._v(" 就好了")]),s._v(" "),a("p",[s._v("③ 上面那题的进阶版，左右两边各有两个元素，且这两个元素的间距和它们与边界的距离比例是 "),a("code",[s._v("2:1")]),s._v(" （如图）。一个简单的实现方式：把他分成两个 ② ，然后设置一样的宽高")]),s._v(" "),a("p",[s._v("另一种是左右分开，当时我没答上来，面试官就直接略过了，并给了我个提示让我下去自己看看，说是可以设置间距的比例，但我在 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/justify-content",target:"_blank",rel:"noopener noreferrer"}},[s._v("MDN"),a("OutboundLink")],1),s._v(" 上没找到相关的 "),a("code",[s._v("flex")]),s._v(" 属性，后来仔细一想，好像也可以计算一下设置个 "),a("code",[s._v("margin")]),s._v(" 来解决")])]),s._v(" "),a("li",[a("p",[s._v("了解移动端适配吗？")]),s._v(" "),a("p",[s._v("回答只了解一些，如："),a("code",[s._v("@media")]),s._v(" 、 "),a("code",[s._v("rem")]),s._v(" 等。面试官问我自己的项目是怎么去适配不同尺寸的手机，回答多采用 "),a("code",[s._v("flex")]),s._v(" 布局，对一些需要不同尺寸显示不同样式的，使用 "),a("code",[s._v("@media")]),s._v(" 。然后面试官问我，在使用 "),a("code",[s._v("@media")]),s._v(" 时有那么多种屏幕尺寸，我是怎么去设置宽度大小的？这里我的回答是用 Chrome 的开发者工具，开启设备工具栏，直接套用它的尺寸设定，具体如图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cmi%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220110084638969.png",alt:"image-20220110084638969"}})])]),s._v(" "),a("li",[a("p",[s._v("分析以下代码的运行结果")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("f")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x\n    x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("这里我踩坑了，回答的是 "),a("code",[s._v("2, undefined, 1")]),s._v(" ，但实际上答案应该是 "),a("code",[s._v("2, 1, 1")]),s._v(" ，这里的坑出现在 "),a("code",[s._v("var x")]),s._v(" 上： "),a("code",[s._v("var")]),s._v(" 定义的变量会出现变量提升。JS 的函数形参其实只是为了方便使用而已，这里形参 x 的真实形式是这样的： "),a("code",[s._v("var x = arguments[0]")]),s._v(" ，因此这段代码其实等价于：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x\nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("因为 "),a("code",[s._v("var")]),s._v(" 的声明会被提升到最上面，所以后面出现的 "),a("code",[s._v("var x")]),s._v(" 并不会覆盖前面的，值还是 1 ，所以 "),a("code",[s._v("y = 1")])])]),s._v(" "),a("li",[a("p",[s._v("下面这两种给数组添加元素的方式效果一样吗？")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 方式一")]),s._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 方式二")]),s._v("\narr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("不一样，虽然结果看起来一样，但使用展开符的方式其实是创建了一个新的数组，改变了 "),a("code",[s._v("arr")]),s._v(" 的指向，已经不是同一个数组了")])]),s._v(" "),a("li",[a("p",[s._v("Vue 一般在哪个生命周期里发送请求？")]),s._v(" "),a("p",[s._v("当时回答的是，我通常在 "),a("code",[s._v("created")]),s._v(" 和 "),a("code",[s._v("mounted")]),s._v(" 中发请求，更多的是在 "),a("code",[s._v("mounted")]),s._v(" 里")])]),s._v(" "),a("li",[a("p",[s._v("在 created 钩子中，能否访问 data 上的值？")])])]),s._v(" "),a("p",[s._v("能，因为此时 Vue 实例已经创建，完成数据的初始化了")]),s._v(" "),a("ol",{attrs:{start:"11"}},[a("li",[a("p",[s._v("Vue 中在 data 里定义的对象动态添加的属性是否具有响应式？")]),s._v(" "),a("p",[s._v("答：不具有。因为 Vue2 中的响应式是基于 "),a("code",[s._v("Object.defineProperty")]),s._v(" 实现的， data 上定义的变量包括对象变量的属性，都是有一个 "),a("code",[s._v("getter")]),s._v(" 和一个 "),a("code",[s._v("setter")]),s._v(" 的，然后通过这两者去做依赖收集和发出更新视图的消息。而我们直接使用 "),a("code",[s._v("this.obj.a")]),s._v(" 这样的形式为对象 "),a("code",[s._v("obj")]),s._v(" 添加属性时，并没有对应 "),a("code",[s._v("getter")]),s._v(" 和 "),a("code",[s._v("setter")]),s._v(" 来实现视图的更新，因此不具有响应性")])]),s._v(" "),a("li",[a("p",[s._v("那有没有办法让动态添加的属性具有响应式？")]),s._v(" "),a("p",[s._v("这题没答好，稍微标记一下")]),s._v(" "),a("p",[s._v("从已有的 "),a("code",[s._v("obj")]),s._v(" 复制出一个新的对象，然后往这个新的对象添加属性，最后将 "),a("code",[s._v("obj")]),s._v(" 赋值为这个新的对象。可以使用展开操作符： "),a("code",[s._v("obj = {...obj, c: 1}")]),s._v(" ，或者可以使用 "),a("code",[s._v("asign")]),s._v(" 方法： "),a("code",[s._v("obj = Object.assign({}, obj, {c: 1})")]),s._v(" 来复制一个新对象")]),s._v(" "),a("p",[s._v("还有一种方式是 Vue 提供的，在 Vue 构造函数和实例中都有的方法："),a("code",[s._v("Vue.set(this.obj,'c',1)")]),s._v(" 和 "),a("code",[s._v("this.$set(this.obj,'c',1)")])])]),s._v(" "),a("li",[a("p",[s._v("在 v-for 生成的列表中，若引用的数组新增了一条数据，那么会重新渲染整个列表吗？")]),s._v(" "),a("p",[s._v("答：不会。因为虚拟 DOM 的 diff 算法是先比较新旧虚拟 DOM 树的节点是否相同，不同则替换或修改属性，新增则创建并插入新的节点，而这里只是新增，只会多插入一个节点")]),s._v(" "),a("p",[s._v("面试官又问：那 "),a("code",[s._v("key")]),s._v(" 在在这一过程中有什么作用？")]),s._v(" "),a("p",[s._v("这里我的回答勉强算是对一半吧，只是以前看过一点，就随口回答了复用元素节点，查了下，准确来说应该是 "),a("strong",[s._v("为了更高效的更新虚拟 DOM")])])]),s._v(" "),a("li",[a("p",[s._v("实现按钮每 2 秒只能触发一次点击事件")])])]),s._v(" "),a("p",[s._v("看到题目想都没想就答了个可以用 "),a("strong",[s._v("节流")]),s._v(" 来解决，还写了代码，过程也还蛮流畅，然后面试官问我：能不能不用到闭包来实现这个功能？当时是给我问懵了，一下没反应过来。。")]),s._v(" "),a("p",[s._v("然后面试官居然问我是不是对这道题有提前准备过，差不多是在问我是不是背题了，我当即否定，并说明只是之前学习过节流和防抖，所以看到这道题的第一反应就知道用节流")]),s._v(" "),a("ol",{attrs:{start:"15"}},[a("li",[a("p",[s._v("讲一讲 Promise 的 all 和 race 的作用和不同")])]),s._v(" "),a("li",[a("p",[s._v("有50个请求，同一时间最多发送六个，每有一个请求完成就由下一个请求进行补位，问如何实现")])])]),s._v(" "),a("p",[s._v("这道题着实给我整懵逼了，要是六个六个发我还能用 "),a("code",[s._v("Promise.all")]),s._v(" 来做，这要有一个发完才能进来一个，我是真的不会了。放出题目后，面试官直接说他去外边接杯水，我先自己琢磨着，然后几分钟后才回来，问我想出解决方案了吗？让我怀疑他给我这道题是为了去接水，而不是为了考察我。。。")]),s._v(" "),a("p",[s._v("最后我给出了一个很呆的方案：维护一个数组，先将前六个请求放进去，用 "),a("code",[s._v("Promise.race")]),s._v(" 执行，当有一个请求完成时，在 "),a("code",[s._v(".then()")]),s._v(" 中将对应的请求抛出数组，并向数组放入新的请求，再次执行 "),a("code",[s._v("Promise.race")]),s._v(" 。这个方法我是实在没办法了才讲的，因为会不停发重复的请求，就特别呆，但我总不能什么都不说吧。。。")]),s._v(" "),a("ol",{attrs:{start:"17"}},[a("li",[s._v("有什么想问的")])]),s._v(" "),a("p",[s._v("这里我心态是已经有点炸了，然后我就想着当一次考前测试吧，就当来查缺补漏了，问了一个不太好的问题：请问您看我刚才的表现，有哪些需要提高的？")]),s._v(" "),a("p",[s._v("这个问题据说会让面试官回顾一下你犯的错，会降低好感度。。但我也不想那么多了，想知道接下来怎么复习，但面试官却跟我说，这个问题他回答不了，因为公司有规定，不可以评价面试者的表现，这就很尴尬了")]),s._v(" "),a("p",[s._v("面试到这里就结束了，当时在面的时候感觉好像都没问什么的样子，结果现在整理一下好像问的还是蛮多的，就是知识面比较窄一些，局限在了 CSS 和 JS 上，也没问一些网络和浏览器运行原理的题目")]),s._v(" "),a("p",[s._v("因为好几题答得不好，甚至有的直接给我干懵了，结果没想到居然过了，第二天就收到了二面预约时间的邮件，让我有种受宠若惊的感觉")]),s._v(" "),a("h3",{attrs:{id:"网易有道-二面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网易有道-二面"}},[s._v("#")]),s._v(" 网易有道 二面")]),s._v(" "),a("p",[s._v("个人感觉面的还行的一次面试，不过也不能说稳了吧，还是蛮危险的，一些题目没答好")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("老传统，先自我介绍")])]),s._v(" "),a("li",[a("p",[s._v("说一下你看的这几本 JS 的书对你的学习产生了什么样的影响")]),s._v(" "),a("p",[s._v("这里的是说自己看过《JavaScript高级程序设计》、《你不知道的JavaScript》、《CSS世界》，然后 JS 的书籍自然指的是前两个，我的回答是：")]),s._v(" "),a("p",[s._v("让我了解了很多之前只是知其然不知其所以然的东西，比如类、继承这一块的，以前刚接触 JS 的时候，就是从 ES6 开始的，所以先接触了 "),a("code",[s._v("class")]),s._v(" 关键字创建的类和 "),a("code",[s._v("extends")]),s._v(" 实现的继承。看完这两本书后，对原型这个概念有了深刻的认知，可以说是扩宽了我的认知")])]),s._v(" "),a("li",[a("p",[s._v("讲一下 JS 的原型是什么东西")]),s._v(" "),a("p",[s._v("原型本质就是一个对象，它的作用是让对象之间进行数据共享，是 JS 中类和继承的关键。每个函数都会有一个原型，通过这个函数创建的对象其内部的 "),a("code",[s._v("[[Prototype]]")]),s._v(" 指针会指向函数的原型，而原型内部的 "),a("code",[s._v("[[Prototype]]")]),s._v(" 指针也会指向它的原型，这样就形成了一条 "),a("strong",[s._v("原型链")]),s._v(" 。原型是通过 "),a("strong",[s._v("委托机制")]),s._v(" 来进行数据共享的，当我们访问一个对象的某个属性或方法时，若对象本身没有，则将访问这个属性的请求委托给它的原型，若原型上也没有，则会委托给原型的原型，直到遍历完这条原型链，找到则返回，未找到则返回 "),a("code",[s._v("undefined")])])]),s._v(" "),a("li",[a("p",[s._v("DOM 事件对象了解吗")]),s._v(" "),a("p",[s._v("每个事件所产生的事件对象可能会不一样，然后说了下事件对象上常用的属性，如点击事件上的鼠标点击的坐标等")])]),s._v(" "),a("li",[a("p",[s._v("了解事件委托吗")]),s._v(" "),a("p",[s._v("这里举了很常见的例子：")]),s._v(" "),a("p",[s._v("一个 "),a("code",[s._v("<ul>")]),s._v(" 中多个 "),a("code",[s._v("<li>")]),s._v(" ，为避免性能的损耗，不用给每个 "),a("code",[s._v("<li>")]),s._v(" 都设置点击事件，只给 "),a("code",[s._v("<ul>")]),s._v(" 设置点击事件，然后通过 "),a("code",[s._v("e.target")]),s._v(" 来知道具体点击的是哪一个子元素")])]),s._v(" "),a("li",[a("p",[s._v("已知 A 包含 B ，如何做到点击 A 中除 B 以外的区域才会执行函数 doSomething")]),s._v(" "),a("p",[s._v("这里我说一个，面试官就问一次还有吗，到最后实在说不出来了。。。")]),s._v(" "),a("ol",[a("li",[s._v("通过 "),a("code",[s._v("e.target")]),s._v(" 判断当前点击的是不是 B")]),s._v(" "),a("li",[s._v("在 B 上设置 CSS 属性 "),a("code",[s._v("pointer-events: none")]),s._v(" 阻止所有点击事件")]),s._v(" "),a("li",[s._v("根据点击事件的事件对象来获取鼠标点击的坐标，再通过 B 的 "),a("code",[s._v("offsetTop")]),s._v(" 和 "),a("code",[s._v("offsetLeft")]),s._v(" 搭配 B 的 "),a("code",[s._v("clientHeight")]),s._v(" 和 "),a("code",[s._v("clientWidth")]),s._v(" 确定 B 所在的区域，若鼠标点击的坐标处于这个区域则不执行")])])]),s._v(" "),a("li",[a("p",[s._v("如果又有一个 C 和 B 同级，那么上面的方案需要更改吗")]),s._v(" "),a("p",[s._v("当时回答的不需要，现在想想又不确定了。。真那么简单他为什么要问？")])]),s._v(" "),a("li",[a("p",[s._v("若 C 包含于 B ，方案 1 还能适用吗")]),s._v(" "),a("p",[s._v("答：不能。因为只是简单的通过 "),a("code",[s._v("e.target")]),s._v(" 判断点击的是哪个元素，若点击的是 C ，则不会生效，但 C 是属于 B 的，就会运行出错误的结果")]),s._v(" "),a("p",[s._v("改写方案：")]),s._v(" "),a("p",[s._v("使用 DOM API 里的 "),a("code",[s._v("B.contains")]),s._v(" 方法判断当前点击的节点是否包含于 B")])]),s._v(" "),a("li",[a("p",[s._v("能自己实现一个 contains 方法吗")]),s._v(" "),a("p",[s._v("直接上代码：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" current "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" node\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当current等于body节点时，表示node不属于root")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("current "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 若当前节点等于root则表示node包含于root")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("current "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n        \n        current "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parentNode\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("了解 CSS 的盒模型吗")])])]),s._v(" "),a("p",[s._v("主要问了 "),a("code",[s._v("box-sizing")]),s._v(" 的几个属性，然后看图说下对应的属性值下元素的宽高，这里略")]),s._v(" "),a("ol",{attrs:{start:"11"}},[a("li",[a("p",[s._v("说一下什么是计算属性")]),s._v(" "),a("p",[s._v("计算属性本质上和 data 中的数据类似，都有一个 "),a("code",[s._v("getter")]),s._v(" 和 "),a("code",[s._v("setter")]),s._v(" 劫持了获取和修改的动作。计算属性能够缓存计算的结果，只有在所依赖的值发生改变才会重新进行计算")])]),s._v(" "),a("li",[a("p",[s._v("如果我在计算属性 A 中引用另一个计算属性 B 可以吗")]),s._v(" "),a("p",[s._v("可以，因为计算属性本质上和 data 中的数据相似")])]),s._v(" "),a("li",[a("p",[s._v("如果一个计算属性引用了 data 中的 a 和 b 的同时，还在里面修改了 c 的值，你认为这有何不妥")]),s._v(" "),a("p",[s._v("当时回答的是：这样结构混乱，看起来很杂，不好维护。不清楚是否正确")])]),s._v(" "),a("li",[a("p",[s._v("你会如何优化")]),s._v(" "),a("p",[s._v("这里面试官提示：既然在计算属性里面去修改了 c 的值，那肯定有它的作用，有他的想法")]),s._v(" "),a("p",[s._v("反应过来了，这应该是为了在 a 或 b 发生变化时同步更新 c 的值，因此可以使用 "),a("code",[s._v("watch")]),s._v(" 来替代，将更新 c 的职责从中分离出来单独维护，这样就不会显得代码看起来很杂乱")])]),s._v(" "),a("li",[a("p",[s._v("若计算属性 A 和计算属性 B 循环引用，可行吗")]),s._v(" "),a("p",[s._v("这里脑抽了，居然答了个可以，因为当时想的是有缓存值可以返回缓存的值而不用计算，但是这样写连第一次计算都运行不了哪来的缓存值。访问计算属性的操作本质上就是执行 "),a("code",[s._v("getter")]),s._v(" 函数， A 的 "),a("code",[s._v("getter")]),s._v(" 会触发 B 的 "),a("code",[s._v("getter")]),s._v(" ，然后 B 的 "),a("code",[s._v("getter")]),s._v(" 又触发 A 的 "),a("code",[s._v("getter")]),s._v(" ，这样一直死循环肯定会爆栈")])]),s._v(" "),a("li",[a("p",[s._v("有什么想问的")]),s._v(" "),a("p",[s._v("问了下技术栈，面试通过的话是做什么工作的，后续还有几次面试")])])]),s._v(" "),a("p",[s._v("这次面试没有一结束马上复盘，可能会有一些题目遗漏。面完这次我突然就信心爆棚了，因为觉得自己发挥的很好，也就计算属性循环引用那边脑子抽了，其他都能很好的回答上来，写代码的部分也写的很从容")]),s._v(" "),a("p",[s._v("面试结果出来了，果然没让我失望，顺利通过二面了，接下来是三面的总监面了，稍许有些紧张")]),s._v(" "),a("h3",{attrs:{id:"网易有道-三面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网易有道-三面"}},[s._v("#")]),s._v(" 网易有道 三面")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("自我介绍")])]),s._v(" "),a("li",[a("p",[s._v("问在西山居的实习做了什么")])]),s._v(" "),a("li",[a("p",[s._v("问在项目中遇到什么困难")])]),s._v(" "),a("li",[a("p",[s._v("第一道算法题")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 给一段字符串和一个数字 n")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 问如何判断字符串中是否具有一个全为数字的子串长度刚好为n")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n            count "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            count"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这段当时脑抽了没加上去，面试官说这样有问题想了好久才反应过来要这么写")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("p",[s._v("这个虽然当时刚开始脑抽写错了，但好歹最后改过来了")])]),s._v(" "),a("li",[a("p",[s._v("第二道算法题")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 以二元组 (a, b) 的形式表示用户的上线时间和离线时间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 给定 n 个二元组，求同一时间最多能有多少个用户在线")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这个就不会做了。。。完全没有思路，在那干瞪眼，想到的方法都是行不通的，耗了好久最后跟面试官说做不出来就下一道题了")])]),s._v(" "),a("li",[a("p",[s._v("一道数学题")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 一副扑克牌 54 张，分给 6 个人，每人 9 张")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 问大小王在同一个人手里的概率")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("前面那道题的时候我就已经心态崩了，这里更是崩，概率论的东西已经好久没用过，基本忘光了。事后去百度，找到一个分给三个人的版本，实际上是排列组合的知识点，稍微理解一下后套用到这道题里，最终答案我算出来的是 "),a("code",[s._v("8/53")])])])]),s._v(" "),a("p",[s._v("这次面试给我的感觉很不好，后面这三道做的题目我就会一道，还在最开始的时候写错了，感觉是要凉了，现在只能祈祷腾讯那里能捞一下我了")]),s._v(" "),a("p",[s._v("2022.1.17 唉，三面挂了，不过也还好，毕竟北京我其实不是很想去（吃不到葡萄），嘤嘤嘤")])])}),[],!1,null,null,null);t.default=n.exports}}]);