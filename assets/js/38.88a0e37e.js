(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{423:function(v,_,t){"use strict";t.r(_);var s=t(0),T=Object(s.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[v._v("#")]),v._v(" 网络")]),v._v(" "),t("h2",{attrs:{id:"请求方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#请求方法"}},[v._v("#")]),v._v(" 请求方法")]),v._v(" "),t("ul",[t("li",[v._v("GET")]),v._v(" "),t("li",[v._v("POST")]),v._v(" "),t("li",[v._v("PUT")]),v._v(" "),t("li",[v._v("DELETE")]),v._v(" "),t("li",[v._v("OPTIONS")]),v._v(" "),t("li",[v._v("HEAD")]),v._v(" "),t("li",[v._v("TRACE")]),v._v(" "),t("li",[v._v("CONNECT")])]),v._v(" "),t("h2",{attrs:{id:"get-和-post-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get-和-post-的区别"}},[v._v("#")]),v._v(" GET 和 POST 的区别")]),v._v(" "),t("ul",[t("li",[v._v("GET 在传递参数时，会将数据拼接到 url 后，而 POST 则是放在 "),t("strong",[v._v("请求体")]),v._v(" 中传输")]),v._v(" "),t("li",[v._v("两者接受的编码不同， GET 只允许 "),t("code",[v._v("ASCII")]),v._v(" 字符，而 POST 则没有这个限制，也可以是二进制数据")]),v._v(" "),t("li",[v._v("安全性方面 POST 会更安全，因为 GET 发送的数据会在 url 中被看到，同时可以直接在浏览器地址栏里或者历史记录里看到传输的参数，从而导致数据的泄露")])]),v._v(" "),t("h2",{attrs:{id:"http-和-https-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-和-https-的区别"}},[v._v("#")]),v._v(" HTTP 和 HTTPS 的区别")]),v._v(" "),t("p",[v._v("之前看的《图解HTTP》中总结了这么一句话：")]),v._v(" "),t("blockquote",[t("p",[v._v("HTTPS = HTTP + 加密 + 认证 + 完整性保护")])]),v._v(" "),t("p",[v._v("HTTP 本身是明文传输的，内容容易被窃取，不安全。在 HTTPS 中通过 "),t("strong",[v._v("SSL")]),v._v(" 或 "),t("strong",[v._v("TSL")]),v._v(" 来实现加密通信的内容，可以说 HTTPS 不是一个新协议，只是身披 "),t("strong",[v._v("SSL")]),v._v(" 或 "),t("strong",[v._v("TSL")]),v._v(" 的 HTTP")]),v._v(" "),t("p",[v._v("由于 HTTP 请求和响应不会确认通信方的身份，在 HTTPS 中通过证书机制来完善这一缺陷。证书是由专门的权威机关发布的")]),v._v(" "),t("p",[v._v("HTTP 无法确定通信的报文的完整性，可能中途会被篡改（中间人攻击），因为 HTTPS 身披着 "),t("strong",[v._v("SSL")]),v._v(" 的外壳，是先通过和 "),t("strong",[v._v("SSL")]),v._v(" 进行通信，再由 "),t("strong",[v._v("SSL")]),v._v(" 和 "),t("strong",[v._v("TCP")]),v._v(" 通信。HTTPS 采用的是 "),t("strong",[v._v("混合加密机制")]),v._v(" ，先使用公开密钥加密方式安全的将共享密钥交换，再使用共享密钥来进行接下来的通信")]),v._v(" "),t("h2",{attrs:{id:"cookie-的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie-的作用"}},[v._v("#")]),v._v(" Cookie 的作用")]),v._v(" "),t("p",[v._v("由于 HTTP 是 “无状态” 的，服务器不会去记忆 HTTP 的状态，所以不需要额外的资源来记录状态信息，这能减轻服务器的负担。但如果请求需要验证消息的话，不记忆状态反而带来了不便，Cookie 就是为此而生的")]),v._v(" "),t("p",[v._v("Cookie 由后端在发送响应请求的时候，附带一个 "),t("code",[v._v("Set-Cookie")]),v._v(" 请求头来设置，此后浏览器发送请求时，会自带 Cookie 进行请求。")])])}),[],!1,null,null,null);_.default=T.exports}}]);